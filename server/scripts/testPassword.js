// server/scripts/testPassword.js
import mongoose from 'mongoose';
import bcryptjs from 'bcryptjs';
import dotenv from 'dotenv';
import User from '../models/User.js';

dotenv.config();

async function testPassword() {
    try {
        // –°–≤—ä—Ä–∑–≤–∞–Ω–µ —Å MongoDB
        await mongoose.connect(process.env.MONGODB_URI || 'mongodb://localhost:27017/technofolio');
        console.log('‚úÖ Connected to MongoDB');

        // –ù–∞–º–∏—Ä–∞–Ω–µ –Ω–∞ –∞–¥–º–∏–Ω–∞
        const admin = await User.findOne({ email: 'admin@technofolio.bg' }).select('+password');

        if (!admin) {
            console.log('‚ùå Admin not found!');
            process.exit(1);
        }

        console.log('üë§ Admin found:', {
            id: admin._id,
            email: admin.email,
            hasPassword: !!admin.password,
            passwordLength: admin.password ? admin.password.length : 0
        });

        // –¢–µ—Å—Ç –Ω–∞ –ø–∞—Ä–æ–ª–∞—Ç–∞
        const testPassword = 'Admin123!';
        const isMatch = await bcryptjs.compare(testPassword, admin.password);

        console.log(`üîë Password test for "${testPassword}":`, isMatch ? '‚úÖ MATCH' : '‚ùå NO MATCH');

        // –ê–∫–æ –Ω–µ —Å—ä–≤–ø–∞–¥–∞, –Ω–µ–∫–∞ –æ–±–Ω–æ–≤–∏–º –ø–∞—Ä–æ–ª–∞—Ç–∞
        if (!isMatch) {
            console.log('\nüîÑ Updating password...');
            admin.password = testPassword;
            await admin.save();
            console.log('‚úÖ Password updated successfully!');

            // –¢–µ—Å—Ç –æ—Ç–Ω–æ–≤–æ
            const updatedAdmin = await User.findOne({ email: 'admin@technofolio.bg' }).select('+password');
            const newMatch = await bcryptjs.compare(testPassword, updatedAdmin.password);
            console.log('üîë New password test:', newMatch ? '‚úÖ MATCH' : '‚ùå NO MATCH');
        }

    } catch (error) {
        console.error('‚ùå Error:', error.message);
    } finally {
        await mongoose.connection.close();
        console.log('\nüîå Disconnected from MongoDB');
    }
}

testPassword();