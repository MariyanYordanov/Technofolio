// server/scripts/seed.js
import mongoose from 'mongoose';
import dotenv from 'dotenv';
import bcryptjs from 'bcryptjs';

// –ú–æ–¥–µ–ª–∏
import User from '../models/User.js';
import CreditCategory from '../models/CreditCategory.js';
import Event from '../models/Event.js';

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
dotenv.config();

// –°–≤—ä—Ä–∑–≤–∞–Ω–µ —Å –±–∞–∑–∞—Ç–∞ –¥–∞–Ω–Ω–∏
const connectDB = async () => {
    try {
        await mongoose.connect(process.env.MONGODB_URI || 'mongodb://localhost:27017/technofolio');
        console.log('‚úÖ MongoDB —Å–≤—ä—Ä–∑–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ');
    } catch (err) {
        console.error('‚ùå –ì—Ä–µ—à–∫–∞ –ø—Ä–∏ —Å–≤—ä—Ä–∑–≤–∞–Ω–µ —Å MongoDB:', err.message);
        process.exit(1);
    }
};

// Seed –¥–∞–Ω–Ω–∏
const seedData = async () => {
    try {
        console.log('üå± –ó–∞–ø–æ—á–≤–∞–Ω–µ –Ω–∞ seed –ø—Ä–æ—Ü–µ—Å–∞...');

        // –ò–∑—á–∏—Å—Ç–≤–∞–Ω–µ –Ω–∞ —Å—ä—â–µ—Å—Ç–≤—É–≤–∞—â–∏ –¥–∞–Ω–Ω–∏ (–æ–ø—Ü–∏–æ–Ω–∞–ª–Ω–æ)
        const clearData = process.argv.includes('--clear');
        if (clearData) {
            console.log('üóëÔ∏è  –ò–∑—Ç—Ä–∏–≤–∞–Ω–µ –Ω–∞ —Å—ä—â–µ—Å—Ç–≤—É–≤–∞—â–∏ –¥–∞–Ω–Ω–∏...');
            await User.deleteMany({});
            await CreditCategory.deleteMany({});
            await Event.deleteMany({});
            console.log('‚úÖ –î–∞–Ω–Ω–∏—Ç–µ —Å–∞ –∏–∑—Ç—Ä–∏—Ç–∏');
        }

        // 1. –°—ä–∑–¥–∞–≤–∞–Ω–µ –Ω–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä
        const adminExists = await User.findOne({ email: 'admin@technofolio.bg' });
        if (!adminExists) {
            const adminPassword = await bcryptjs.hash('Admin123!', 10);
            const admin = await User.create({
                email: 'admin@technofolio.bg',
                password: adminPassword,
                firstName: '–ê–¥–º–∏–Ω',
                lastName: '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤',
                role: 'admin',
                emailConfirmed: true
            });
            console.log('‚úÖ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —Å—ä–∑–¥–∞–¥–µ–Ω:', admin.email);
        } else {
            console.log('‚ÑπÔ∏è  –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ä—Ç –≤–µ—á–µ —Å—ä—â–µ—Å—Ç–≤—É–≤–∞');
        }

        // 2. –°—ä–∑–¥–∞–≤–∞–Ω–µ –Ω–∞ —É—á–∏—Ç–µ–ª–∏
        const teachers = [
            {
                email: 'teacher1@technofolio.bg',
                firstName: '–ú–∞—Ä–∏—è',
                lastName: '–ò–≤–∞–Ω–æ–≤–∞',
                subjects: ['–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞', '–ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞'],
                qualification: '–ú–∞–≥–∏—Å—Ç—ä—Ä –ø–æ –º–∞—Ç–µ–º–∞—Ç–∏–∫–∞',
                yearsOfExperience: 10
            },
            {
                email: 'teacher2@technofolio.bg',
                firstName: '–ì–µ–æ—Ä–≥–∏',
                lastName: '–ü–µ—Ç—Ä–æ–≤',
                subjects: ['–§–∏–∑–∏–∫–∞', '–ê—Å—Ç—Ä–æ–Ω–æ–º–∏—è'],
                qualification: '–ú–∞–≥–∏—Å—Ç—ä—Ä –ø–æ —Ñ–∏–∑–∏–∫–∞',
                yearsOfExperience: 15
            }
        ];

        for (const teacherData of teachers) {
            const exists = await User.findOne({ email: teacherData.email });
            if (!exists) {
                const password = await bcryptjs.hash('Teacher123!', 10);
                await User.create({
                    email: teacherData.email,
                    password: password,
                    firstName: teacherData.firstName,
                    lastName: teacherData.lastName,
                    role: 'teacher',
                    emailConfirmed: true,
                    teacherInfo: {
                        subjects: teacherData.subjects,
                        qualification: teacherData.qualification,
                        yearsOfExperience: teacherData.yearsOfExperience
                    }
                });
                console.log('‚úÖ –£—á–∏—Ç–µ–ª —Å—ä–∑–¥–∞–¥–µ–Ω:', teacherData.email);
            }
        }

        // 3. –°—ä–∑–¥–∞–≤–∞–Ω–µ –Ω–∞ —É—á–µ–Ω–∏—Ü–∏
        const students = [
            {
                email: 'student1@technofolio.bg',
                firstName: '–ò–≤–∞–Ω',
                lastName: '–î–∏–º–∏—Ç—Ä–æ–≤',
                grade: '10',
                specialization: '–°–æ—Ñ—Ç—É–µ—Ä–Ω–∏ –∏ —Ö–∞—Ä–¥—É–µ—Ä–Ω–∏ –Ω–∞—É–∫–∏',
                averageGrade: 5.50
            },
            {
                email: 'student2@technofolio.bg',
                firstName: '–ï–ª–µ–Ω–∞',
                lastName: '–°—Ç–æ—è–Ω–æ–≤–∞',
                grade: '11',
                specialization: '–°–æ—Ñ—Ç—É–µ—Ä–Ω–∏ –∏ —Ö–∞—Ä–¥—É–µ—Ä–Ω–∏ –Ω–∞—É–∫–∏',
                averageGrade: 5.80
            },
            {
                email: 'student3@technofolio.bg',
                firstName: '–ü–µ—Ç—ä—Ä',
                lastName: '–ì–µ–æ—Ä–≥–∏–µ–≤',
                grade: '9',
                specialization: '–ü—Ä–µ–¥–ø—Ä–∏–µ–º–∞—á–µ—Å—Ç–≤–æ –∏ –±–∏–∑–Ω–µ—Å',
                averageGrade: 5.20
            }
        ];

        for (const studentData of students) {
            const exists = await User.findOne({ email: studentData.email });
            if (!exists) {
                const password = await bcryptjs.hash('Student123!', 10);
                await User.create({
                    email: studentData.email,
                    password: password,
                    firstName: studentData.firstName,
                    lastName: studentData.lastName,
                    role: 'student',
                    emailConfirmed: true,
                    studentInfo: {
                        grade: studentData.grade,
                        specialization: studentData.specialization,
                        averageGrade: studentData.averageGrade
                    }
                });
                console.log('‚úÖ –£—á–µ–Ω–∏–∫ —Å—ä–∑–¥–∞–¥–µ–Ω:', studentData.email);
            }
        }

        // 4. –°—ä–∑–¥–∞–≤–∞–Ω–µ –Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∑–∞ –∫—Ä–µ–¥–∏—Ç–∏
        const creditCategories = [
            // –ê–∑ –∏ –¥—Ä—É–≥–∏—Ç–µ
            { pillar: '–ê–∑ –∏ –¥—Ä—É–≥–∏—Ç–µ', name: '–î–æ–±—Ä–æ–≤–æ–ª—á–µ—Å—Ç–≤–æ', description: '–£—á–∞—Å—Ç–∏–µ –≤ –¥–æ–±—Ä–æ–≤–æ–ª—á–µ—Å–∫–∏ –∏–Ω–∏—Ü–∏–∞—Ç–∏–≤–∏' },
            { pillar: '–ê–∑ –∏ –¥—Ä—É–≥–∏—Ç–µ', name: '–°–æ—Ü–∏–∞–ª–Ω–∏ –ø—Ä–æ–µ–∫—Ç–∏', description: '–û—Ä–≥–∞–Ω–∏–∑–∏—Ä–∞–Ω–µ –∏ —É—á–∞—Å—Ç–∏–µ –≤ —Å–æ—Ü–∏–∞–ª–Ω–∏ –ø—Ä–æ–µ–∫—Ç–∏' },
            { pillar: '–ê–∑ –∏ –¥—Ä—É–≥–∏—Ç–µ', name: '–ú–µ–Ω—Ç–æ—Ä—Å—Ç–≤–æ', description: '–ü–æ–¥–ø–æ–º–∞–≥–∞–Ω–µ –Ω–∞ –ø–æ-–º–∞–ª–∫–∏ —É—á–µ–Ω–∏—Ü–∏' },
            { pillar: '–ê–∑ –∏ –¥—Ä—É–≥–∏—Ç–µ', name: '–£—á–∏–ª–∏—â–Ω–∏ –∏–Ω–∏—Ü–∏–∞—Ç–∏–≤–∏', description: '–£—á–∞—Å—Ç–∏–µ –≤ —É—á–∏–ª–∏—â–Ω–∏ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è' },

            // –ú–∏—Å–ª–µ–Ω–µ
            { pillar: '–ú–∏—Å–ª–µ–Ω–µ', name: '–û–ª–∏–º–ø–∏–∞–¥–∏', description: '–£—á–∞—Å—Ç–∏–µ –≤ –æ–ª–∏–º–ø–∏–∞–¥–∏ –∏ —Å—ä—Å—Ç–µ–∑–∞–Ω–∏—è' },
            { pillar: '–ú–∏—Å–ª–µ–Ω–µ', name: '–ù–∞—É—á–Ω–∏ –ø—Ä–æ–µ–∫—Ç–∏', description: '–†–∞–∑—Ä–∞–±–æ—Ç–≤–∞–Ω–µ –Ω–∞ –Ω–∞—É—á–Ω–∏ –ø—Ä–æ–µ–∫—Ç–∏' },
            { pillar: '–ú–∏—Å–ª–µ–Ω–µ', name: '–î–µ–±–∞—Ç–∏', description: '–£—á–∞—Å—Ç–∏–µ –≤ –¥–µ–±–∞—Ç–∏ –∏ –¥–∏—Å–∫—É—Å–∏–∏' },
            { pillar: '–ú–∏—Å–ª–µ–Ω–µ', name: '–¢–≤–æ—Ä—á–µ—Å–∫–∏ –ø—Ä–æ–µ–∫—Ç–∏', description: '–°—ä–∑–¥–∞–≤–∞–Ω–µ –Ω–∞ –∏–Ω–æ–≤–∞—Ç–∏–≤–Ω–∏ —Ä–µ—à–µ–Ω–∏—è' },

            // –ü—Ä–æ—Ñ–µ—Å–∏—è
            { pillar: '–ü—Ä–æ—Ñ–µ—Å–∏—è', name: '–°—Ç–∞–∂–æ–≤–µ', description: '–£—á–∞—Å—Ç–∏–µ –≤ —Å—Ç–∞–∂–∞–Ω—Ç—Å–∫–∏ –ø—Ä–æ–≥—Ä–∞–º–∏' },
            { pillar: '–ü—Ä–æ—Ñ–µ—Å–∏—è', name: '–ü—Ä–∞–∫—Ç–∏–∫–∏', description: '–ü—Ä–æ—Ñ–µ—Å–∏–æ–Ω–∞–ª–Ω–∏ –ø—Ä–∞–∫—Ç–∏–∫–∏ –≤—ä–≤ —Ñ–∏—Ä–º–∏' },
            { pillar: '–ü—Ä–æ—Ñ–µ—Å–∏—è', name: '–°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∏', description: '–ü–æ–ª—É—á–∞–≤–∞–Ω–µ –Ω–∞ –ø—Ä–æ—Ñ–µ—Å–∏–æ–Ω–∞–ª–Ω–∏ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∏' },
            { pillar: '–ü—Ä–æ—Ñ–µ—Å–∏—è', name: '–ü—Ä–æ–µ–∫—Ç–Ω–∞ —Ä–∞–±–æ—Ç–∞', description: '–†–∞–±–æ—Ç–∞ –ø–æ —Ä–µ–∞–ª–Ω–∏ –ø—Ä–æ–µ–∫—Ç–∏' }
        ];

        for (const category of creditCategories) {
            const exists = await CreditCategory.findOne({
                pillar: category.pillar,
                name: category.name
            });
            if (!exists) {
                await CreditCategory.create(category);
                console.log(`‚úÖ –ö–∞—Ç–µ–≥–æ—Ä–∏—è —Å—ä–∑–¥–∞–¥–µ–Ω–∞: ${category.pillar} - ${category.name}`);
            }
        }

        // 5. –°—ä–∑–¥–∞–≤–∞–Ω–µ –Ω–∞ —Å—ä–±–∏—Ç–∏—è
        const teacher = await User.findOne({ role: 'teacher' });
        if (teacher) {
            const events = [
                {
                    title: '–î–µ–Ω –Ω–∞ –æ—Ç–≤–æ—Ä–µ–Ω–∏—Ç–µ –≤—Ä–∞—Ç–∏',
                    description: '–ü—Ä–µ–¥—Å—Ç–∞–≤—è–Ω–µ –Ω–∞ —É—á–∏–ª–∏—â–µ—Ç–æ –ø—Ä–µ–¥ –±—ä–¥–µ—â–∏ —É—á–µ–Ω–∏—Ü–∏ –∏ —Ç–µ—Ö–Ω–∏—Ç–µ —Ä–æ–¥–∏—Ç–µ–ª–∏. –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏, –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–∏ –∏ —Å—Ä–µ—â–∏ —Å —É—á–∏—Ç–µ–ª–∏.',
                    startDate: new Date('2025-03-15T10:00:00'),
                    endDate: new Date('2025-03-15T16:00:00'),
                    location: '–ù–ü–ú–ì "–ê–∫–∞–¥. –õ—é–±–æ–º–∏—Ä –ß–∞–∫–∞–ª–æ–≤"',
                    organizer: '–£—á–∏–ª–∏—â–Ω–æ —Ä—ä–∫–æ–≤–æ–¥—Å—Ç–≤–æ',
                    createdBy: teacher._id
                },
                {
                    title: '–•–∞–∫–∞—Ç–æ–Ω "–ò–Ω–æ–≤–∞—Ü–∏–∏ –≤ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ—Ç–æ"',
                    description: '24-—á–∞—Å–æ–≤–æ —Å—ä—Å—Ç–µ–∑–∞–Ω–∏–µ –ø–æ –ø—Ä–æ–≥—Ä–∞–º–∏—Ä–∞–Ω–µ –∏ —Å—ä–∑–¥–∞–≤–∞–Ω–µ –Ω–∞ –æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª–Ω–∏ —Ä–µ—à–µ–Ω–∏—è.',
                    startDate: new Date('2025-04-20T09:00:00'),
                    endDate: new Date('2025-04-21T15:00:00'),
                    location: '–ö–æ–º–ø—é—Ç—ä—Ä–Ω–∏ –∑–∞–ª–∏',
                    organizer: '–ö–ª—É–± –ø–æ –ø—Ä–æ–≥—Ä–∞–º–∏—Ä–∞–Ω–µ',
                    createdBy: teacher._id
                },
                {
                    title: '–ö–∞—Ä–∏–µ—Ä–µ–Ω —Ñ–æ—Ä—É–º',
                    description: '–°—Ä–µ—â–∞ —Å –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç–µ–ª–∏ –Ω–∞ IT –∫–æ–º–ø–∞–Ω–∏–∏ –∏ —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–∏.',
                    startDate: new Date('2025-05-10T13:00:00'),
                    location: '–ê–∫—Ç–æ–≤–∞ –∑–∞–ª–∞',
                    organizer: '–ö–∞—Ä–∏–µ—Ä–µ–Ω —Ü–µ–Ω—Ç—ä—Ä',
                    createdBy: teacher._id
                }
            ];

            for (const eventData of events) {
                const exists = await Event.findOne({ title: eventData.title });
                if (!exists) {
                    await Event.create(eventData);
                    console.log('‚úÖ –°—ä–±–∏—Ç–∏–µ —Å—ä–∑–¥–∞–¥–µ–Ω–æ:', eventData.title);
                }
            }
        }

        console.log('\nüéâ Seed –ø—Ä–æ—Ü–µ—Å—ä—Ç –∑–∞–≤—ä—Ä—à–∏ —É—Å–ø–µ—à–Ω–æ!');
        console.log('\nüìù –î–∞–Ω–Ω–∏ –∑–∞ –≤—Ö–æ–¥:');
        console.log('‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ');
        console.log('–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä: admin@technofolio.bg / Admin123!');
        console.log('–£—á–∏—Ç–µ–ª: teacher1@technofolio.bg / Teacher123!');
        console.log('–£—á–µ–Ω–∏–∫: student1@technofolio.bg / Student123!');
        console.log('‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ');

    } catch (error) {
        console.error('‚ùå –ì—Ä–µ—à–∫–∞ –ø—Ä–∏ seed –ø—Ä–æ—Ü–µ—Å–∞:', error);
        process.exit(1);
    }
};

// –ò–∑–ø—ä–ª–Ω–µ–Ω–∏–µ
const runSeed = async () => {
    await connectDB();
    await seedData();
    await mongoose.connection.close();
    console.log('\n‚úÖ –í—Ä—ä–∑–∫–∞—Ç–∞ —Å –±–∞–∑–∞—Ç–∞ –¥–∞–Ω–Ω–∏ –µ –∑–∞—Ç–≤–æ—Ä–µ–Ω–∞');
    process.exit(0);
};

// –°—Ç–∞—Ä—Ç–∏—Ä–∞–Ω–µ
runSeed();