// server/scripts/checkUsers.js
import mongoose from 'mongoose';
import dotenv from 'dotenv';
import User from '../models/User.js';

dotenv.config();

async function checkUsers() {
    try {
        // –°–≤—ä—Ä–∑–≤–∞–Ω–µ —Å MongoDB
        await mongoose.connect(process.env.MONGODB_URI || 'mongodb://localhost:27017/technofolio');
        console.log('‚úÖ Connected to MongoDB\n');

        // –ù–∞–º–∏—Ä–∞–Ω–µ –Ω–∞ –≤—Å–∏—á–∫–∏ –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª–∏
        const users = await User.find({}).select('email firstName lastName role createdAt');

        console.log(`üìä –û–±—â–æ –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª–∏: ${users.length}\n`);

        // –ì—Ä—É–ø–∏—Ä–∞–Ω–µ –ø–æ —Ä–æ–ª—è
        const admins = users.filter(u => u.role === 'admin');
        const teachers = users.filter(u => u.role === 'teacher');
        const students = users.filter(u => u.role === 'student');

        console.log('üë®‚Äçüíº –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∏:', admins.length);
        admins.forEach(admin => {
            console.log(`   - ${admin.email} (${admin.firstName} ${admin.lastName})`);
        });

        console.log('\nüë®‚Äçüè´ –£—á–∏—Ç–µ–ª–∏:', teachers.length);
        teachers.forEach(teacher => {
            console.log(`   - ${teacher.email} (${teacher.firstName} ${teacher.lastName})`);
        });

        console.log('\nüë®‚Äçüéì –£—á–µ–Ω–∏—Ü–∏:', students.length);
        students.forEach(student => {
            console.log(`   - ${student.email} (${student.firstName} ${student.lastName})`);
        });

        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–∏—è —É—á–∏—Ç–µ–ª
        console.log('\nüîç –¢—ä—Ä—Å–µ–Ω–µ –Ω–∞ teacher1@technofolio.bg...');
        const teacher1 = await User.findOne({ email: 'teacher1@technofolio.bg' });
        if (teacher1) {
            console.log('‚úÖ –ù–∞–º–µ—Ä–µ–Ω!');
        } else {
            console.log('‚ùå –ù–µ –µ –Ω–∞–º–µ—Ä–µ–Ω! –¢—Ä—è–±–≤–∞ –¥–∞ –∏–∑–ø—ä–ª–Ω–∏—à seed —Å–∫—Ä–∏–ø—Ç–∞.');
        }

    } catch (error) {
        console.error('‚ùå Error:', error.message);
    } finally {
        await mongoose.connection.close();
        console.log('\nüîå Disconnected from MongoDB');
    }
}

checkUsers();